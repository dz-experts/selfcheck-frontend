{"version":3,"sources":["app/i18n/index.js","app/App.js","app/home/HomeScreen.js","constants.js","app/api/_base.js","app/api/questions.js","app/common/ScreenLoadingIndicator.js","app/common/ScreenError.js","app/survey/SurveyInformationTab.js","app/utils/forms.js","app/survey/fields/TextField.js","app/survey/fields/NumberField.js","app/survey/fields/SelectField.js","app/survey/fields/RadioField.js","app/survey/SurveyQuestionsTab.js","app/survey/SurveyResultsTab.js","app/survey/SurveyScreen.js","app/home/LegalScreen.js","app/routes.js","serviceWorker.js","index.js"],"names":["i18next","use","initReactI18next","init","lng","nsSeparator","keySeparator","fallbackLng","returnNull","resources","ar","translation","en","isRTL","lang","withTranslation","t","i18n","route","useEffect","document","body","dir","language","className","role","aria-label","to","href","aria-expanded","aria-hidden","onClick","e","changeLanguage","preventDefault","renderRoutes","routes","dangerouslySetInnerHTML","__html","icon","faArrowLeft","faArrowRight","api_base","axios","create","baseURL","constants","api_questions","get","post","answers","data","faSpinner","pulse","size","message","buttonLabel","handleButtonClick","faExclamationTriangle","stepForward","errorMessage","key","x","min","max","minLength","maxLength","question","register","errors","class","name","type","ref","required","value","undefined","format","min_length","max_length","step","indexOf","kind","choices","map","choice","current_step","questions","addAnswer","stepBack","current_question","useState","submitIsLoading","setSubmitIsLoading","defaultValues","default_value","useForm","handleSubmit","reset","onSubmit","values","id","empty_values","then","catch","length","last_answer_values","toLowerCase","SurveyScreen","props","question_id","setState","state","prevAnswersList","filter","answer","removeAnswer","next_step","next_question","depends_on_question","depends_on_question_value","Promise","resolve","response","status","results","reject","previous_step","last_answer","loading","loading_failed","this","error","loadQuestions","current_tab","Error","ScreenLoadingIndicator","refresh","React","Component","component","App","path","exact","HomeScreen","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.a4eb608c.chunk.js","sourcesContent":["import i18next from 'i18next'\nimport { initReactI18next } from 'react-i18next'\n\n// %Add any new languages here%\nimport ar from './ar/resource';\nimport en from './en/resource';\n\n\ni18next\n.use(initReactI18next) // passes i18n down to react-i18next\n.init({\n  lng: 'fr',\n\n  // allow keys to be phrases having `:`, `.`\n  nsSeparator: false,\n  keySeparator: false,\n\n  // do not load a fallback\n  fallbackLng: false,\n\n  // do not allow null as translation value (anything null will be considered as if not translated)\n  returnNull: false,\n\n  resources: {\n    // %Add any new languages here%\n    ar: {\n      translation: ar\n    },\n    en: {\n      translation: en\n    }\n  }\n});\n\n\nexport const isRTL = (lang) => {\n  if (lang === 'ar')\n    return true\n  return false\n}\n\nexport default i18next;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport { withTranslation } from 'react-i18next'\nimport { renderRoutes } from \"react-router-config\"\n\nimport { isRTL } from './i18n'\n\n\nfunction App({t, i18n, route}) {\n\n  useEffect(() => {\n    // ensure page text direction follows language changes\n    document.body.dir = isRTL(i18n.language)?'rtl':'ltr'\n  });\n\n\n  return (\n    <div>\n      \n      <nav className=\"navbar is-primary\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <Link to=\"/\" className=\"navbar-item\">\n              <strong>{t('Accueil')}</strong>\n            </Link>\n\n            <a href=\"#\" className=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\">\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n            </a>\n          </div>\n\n          <div className=\"navbar-end\">\n            <a\n              href=\"#\"\n              className={`navbar-item ${i18n.language === 'fr'?'is-active':''}`}\n              onClick={(e) => {\n                i18n.changeLanguage('fr');\n                e.preventDefault();\n              }}\n            >\n              Français\n            </a>\n            <a\n              href=\"#\"\n              className={`navbar-item ${i18n.language === 'ar'?'is-active':''}`}\n              onClick={(e) => {\n                i18n.changeLanguage('ar');\n                e.preventDefault();\n              }}\n            >\n              العربية\n            </a>\n          </div>\n        </div>\n      </nav>\n\n      {renderRoutes(route.routes)}\n\n        <footer className=\"footer\">\n          <div className=\"content has-text-centered\">\n            <p>\n              {t('Algorithme d\\'orientation mis à jour sur les recommandations de la note n 9 du 18 mars 2020.')}\n            </p>\n            <p>\n              {t('Ce site d\\’information n\\’est pas un dispositif médical, il ne délivre pas d\\’avis médical.')}\n            </p>\n            <p>\n              <div\n                dangerouslySetInnerHTML={{__html: t('Projet solidaire d\\'urgence, créé par le groupe <b>DZ-Scientists VS Corona</b>.')}}>\n              </div>\n\n            </p>\n          </div>\n        </footer>\n \n\n    </div>\n  );\n\n}\n\nexport default withTranslation()(App);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowRight, faArrowLeft } from '@fortawesome/free-solid-svg-icons'\n\nimport { isRTL } from './../i18n'\n\n\nfunction HomeScreen({t, i18n}) {\n  \n  return (\n    <div>\n\n      <section className=\"hero is-medium is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">\n              {t('Vous pensez avoir été exposé au Coronavirus COVID-19 et avez des symptômes ?')}\n            </h1>\n            <h2 className=\"subtitle\">\n              {t('Faites le test pour répondre en citoyen éclairé selon vos symptômes.')}\n            </h2>\n            <Link to=\"/survey\" className=\"button is-primary\">\n              <span>{t('Démarrer le test')}</span>\n              <span className=\"icon is-small\">\n                <FontAwesomeIcon icon={isRTL(i18n.language)?faArrowLeft:faArrowRight} />\n              </span>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n    </div>\n  );\n}\n\nexport default withTranslation()(HomeScreen);\n","export default {\n  API_URL: 'https://mofeedz.herokuapp.com/api/public' // no trailing slash\n}\n","import axios from 'axios'\nimport constants from './../../constants'\n\n\nconst api_base = () => {\n  return axios.create({\n    baseURL: constants.API_URL,\n  })\n}\n\nexport default api_base\n","import api_base from './_base'\n\nconst api_questions = {\n  get: () => (\n    api_base().get('/questions/')\n  ),\n  post: ({answers}) => (\n    api_base().post('/questions/', {data: answers})\n  )\n}\n\nexport default api_questions\n","import React from 'react';\nimport { withTranslation } from 'react-i18next'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction LoadingIndicator({t}) {\n  \n  return (\n    <section className=\"section has-text-centered\">\n      <span className=\"icon is-large\">\n        <FontAwesomeIcon icon={faSpinner} pulse={true} size={'3x'} />\n      </span>\n      <br/>\n      <br/>\n      {t('Chargement..')}\n    </section>\n  );\n}\n\nexport default withTranslation()(LoadingIndicator);\n","import React from 'react';\nimport { withTranslation } from 'react-i18next'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction ScreenError({t, message, buttonLabel, handleButtonClick}) {\n  \n  return (\n    <section className=\"section has-text-centered\">\n      <span className=\"icon is-large\">\n        <FontAwesomeIcon icon={faExclamationTriangle} size={'3x'} />\n      </span>\n      <br/>\n      <br/>\n      {message}\n      <br/>\n      <br/>\n      <button\n        className=\"button is-warning\"\n        onClick={handleButtonClick}\n      >\n        <span>{buttonLabel}</span>\n      </button>\n    </section>\n  );\n}\n\nexport default withTranslation()(ScreenError);\n","import React from 'react';\nimport { withTranslation } from 'react-i18next'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowRight, faArrowLeft } from '@fortawesome/free-solid-svg-icons'\n\nimport { isRTL } from './../i18n'\n\n\nfunction SurveyInformationTab({t, i18n, stepForward}) {\n  \n  return (\n    <div>\n\n      <div className=\"box\">\n        <h2 className=\"title\">Préambule</h2>\n        <p>\n          « L’application est fournie à titre gratuit, en l’état, uniquement à des fins d’information pour contribuer à\n          fluidifier la prise en charge des personnes par les services d’urgences pendant l’épidémie de Coronavirus\n          COVID-19. L’exhaustivité, l’exactitude, le caractère à jour des informations et contenus mis à disposition dans\n          cette application, ou leur adéquation à des finalités particulières, ne sont pas garantis.\n          <br/><br/>\n          L’utilisateur reconnaît que l’application y compris le test et les autres informations qu’elle contient, ne\n          constituent en aucun cas un avis, une recommandation, un examen, un diagnostic, une prescription, ou tout autre\n          acte de nature médicale notamment établi ou réalisé par un médecin ou un pharmacien. L’utilisation de\n          l’application et de son contenu ne remplace en aucun cas le conseil nécessaire donné par votre médecin ou votre\n          pharmacien ou tout autre professionnel de santé compétent dans chaque cas particulier. Tout examen ou décision de\n          l’utilisateur doit être réalisé ou prise de manière autonome sur la base de l’information scientifique et clinique\n          pertinente, de la notice officielle du produit concerné le cas échéant et en cas de doute, en consultant un\n          médecin compétent.\n          <br/><br/>\n          Les informations mises à disposition dans le cadre de l’application servent uniquement d’informations de premier\n          niveau. L’absence d’avertissement au sujet d’un risque ne signifie pas qu’il n’existe pas. »\n        </p>\n      </div>\n\n      <button\n        className=\"button is-primary\"\n        onClick={(e) => {\n          stepForward({})\n          e.preventDefault()\n        }}\n      >\n        <span>{t('Démarrer le test')}</span>\n        <span className=\"icon is-small\">\n          <FontAwesomeIcon icon={isRTL(i18n.language)?faArrowLeft:faArrowRight} />\n        </span>\n      </button>\n\n    </div>\n  );\n}\n\nexport default withTranslation()(SurveyInformationTab);\n","export const errorMessage = function(key, t = x => x) {\n    switch (key) {\n        case 'required':\n            return () => t('Ce champ est réquis')\n        case 'min':\n            return (min) => `${t('Valeur minimale:')} ${min}`\n        case 'max':\n            return (max) => `${t('Valeur maximale:')} ${max}`\n        case 'minLength':\n            return (minLength) => `${t('La valeur doit comprendre au moins')} ${minLength} ${t('caractères')}`\n        case 'maxLength':\n            return (maxLength) => `${t('La valeur doit comprendre au plus')} ${maxLength} ${t('caractères')}`\n        default:\n            return t('Valeur non valide')\n    }\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { withTranslation } from 'react-i18next'\n\nimport { errorMessage } from './../../utils/forms'\n\n\nfunction TextField({t, i18n, question, register, errors}) {\n  \n  return (\n    <div>\n      <div class=\"field has-addons\">\n        <p class=\"control\">\n          <input\n            className={`input ${errors[question.key]?'is-danger':''}`}\n            name={question.key}\n            type=\"text\"\n            ref={register({\n              required: {value: true, message: errorMessage('required', t)()},\n              ...question.format.min_length!==undefined?{minLength: {value: question.format.minLength, message: errorMessage('minLength', t)(question.format.minLength) }}:{},\n              ...question.format.max_length!==undefined?{maxLength: {value: question.format.maxLength, message: errorMessage('maxLength', t)(question.format.maxLength) }}:{}\n            })}\n          />\n        </p>\n        {question.format[`suffix_${i18n.language}`] !== null && (\n          <p class=\"control\">\n            <a class=\"button is-static\">\n              {question.format[`suffix_${i18n.language}`]}\n            </a>\n          </p>\n        )}\n      </div>\n      {errors[question.key] && (<p className=\"help is-danger\">{errors[question.key].message}.</p>)}\n    </div>\n  );\n}\n\nexport default withTranslation()(TextField);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { withTranslation } from 'react-i18next'\n\nimport { errorMessage } from './../../utils/forms'\n\n\nfunction NumberField({t, i18n, question, register, errors}) {\n\n  return (\n    <div>\n      <div class=\"field has-addons\">\n        <p class=\"control\">\n          <input\n            className={`input ${errors[question.key]?'is-danger':''}`}\n            name={question.key}\n            type=\"number\"\n            step={['decimal', 'float'].indexOf(question.format.kind)>-1?\"0.01\":\"1\"}\n            ref={register({\n              required: {value: true, message: errorMessage('required', t)()},\n              ...question.format.min!==undefined?{min: {value: question.format.min, message: errorMessage('min', t)(question.format.min) }}:{},\n              ...question.format.max!==undefined?{max: {value: question.format.max, message: errorMessage('max', t)(question.format.max) }}:{}\n            })}\n          />\n        </p>\n        {question.format[`suffix_${i18n.language}`] !== null && (\n          <p class=\"control\">\n            <a class=\"button is-static\">\n              {question.format[`suffix_${i18n.language}`]}\n            </a>\n          </p>\n        )}\n      </div>\n      {errors[question.key] && (<p className=\"help is-danger\">{errors[question.key].message}.</p>)}\n    </div>\n  );\n}\n\nexport default withTranslation()(NumberField);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { withTranslation } from 'react-i18next'\n\nimport { errorMessage } from './../../utils/forms'\n\n\nfunction SelectField({t, i18n, question, register, errors}) {\n  \n  return (\n    <div>\n      <div class=\"field has-addons\">\n        <p class=\"control\">\n          <div className={`select ${errors[question.key]?'is-danger':''}`}>\n            <select\n              name={question.key}\n              ref={register({\n                required: {value: true, message: errorMessage('required', t)()}\n              })}\n            >\n              {question.format.choices.map((choice) => (\n                <option key={choice.value} value={choice.value}>{choice[`label_${i18n.language}`]}</option>\n              ))}\n            </select>\n          </div>\n        </p>\n        {question.format[`suffix_${i18n.language}`] !== null && (\n          <p class=\"control\">\n            <a class=\"button is-static\">\n              {question.format[`suffix_${i18n.language}`]}\n            </a>\n          </p>\n        )}\n      </div>\n      {errors[question.key] && (<p className=\"help is-danger\">{errors[question.key].message}.</p>)}\n    </div>\n  );\n}\n\nexport default withTranslation()(SelectField);\n","import React from 'react';\nimport { withTranslation } from 'react-i18next'\n\nimport { errorMessage } from './../../utils/forms'\n\n\nfunction RadioField({t, i18n, question, register, errors}) {\n  \n  return (\n    <div className=\"control\">\n      {question.format.choices.map((choice) => (\n        <label className=\"radio\" key={choice.value}>\n          <input\n            type=\"radio\"\n            name={question.key}\n            value={choice.value}\n            ref={register({\n              required: {value: true, message: errorMessage('required', t)()}\n            })}\n          />\n          {choice[`label_${i18n.language}`]}\n          <br/>\n        </label>\n      ))}\n      {errors[question.key] && (<p className=\"help is-danger\">{errors[question.key].message}.</p>)}\n    </div>\n  );\n}\n\nexport default withTranslation()(RadioField);\n","import React, { useState } from 'react';\nimport { withTranslation } from 'react-i18next'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowRight, faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport { useForm } from \"react-hook-form\";\n\nimport { isRTL } from './../i18n'\n\nimport TextField from './fields/TextField'\nimport NumberField from './fields/NumberField'\nimport SelectField from './fields/SelectField'\nimport RadioField from './fields/RadioField'\n\n\nfunction SurveyQuestionsTab({t, i18n, current_step, questions, answers, addAnswer, stepForward, stepBack}) {\n  \n  const current_question = questions[current_step - 1]\n  const [submitIsLoading, setSubmitIsLoading] = useState(false);\n  \n  const defaultValues = {}\n  defaultValues[current_question.key] = current_question.default_value\n\n  const { handleSubmit, register, errors, reset } = useForm({defaultValues});\n  \n  const onSubmit = values => {\n    setSubmitIsLoading(true)\n    \n    // store answer\n    addAnswer(current_question.id, current_question.key, values[current_question.key])\n    \n    // reset form (needed in order for the form to be empty for use in the next question)\n    let empty_values = {}\n    empty_values[current_question.key] = \"\" // this exact line is important, so Radio fields can be reset too\n    reset(empty_values)\n    \n    // step forward\n    stepForward()\n      .then(() => {\n        setSubmitIsLoading(false)\n      })\n      .catch(() => {\n        setSubmitIsLoading(false)\n      })\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      \n      <div className=\"box\">\n        \n        <button\n          className=\"button is-white\"\n          onClick={(e) => {\n            if (answers.length) {\n              let last_answer_values = {}\n              last_answer_values[answers[answers.length - 1].key] = answers[answers.length - 1].value\n              reset(last_answer_values)\n            }\n            stepBack()\n            e.preventDefault()\n          }}\n        >\n          <span className=\"icon is-small\">\n            <FontAwesomeIcon icon={isRTL(i18n.language)?faArrowRight:faArrowLeft} />\n          </span>\n          <span>{t('Question')} {current_step} {t('sur')} {questions.length}</span>\n        </button>\n        \n        <h2 className=\"title\">\n          {current_question[`text_${i18n.language}`]}\n        </h2>\n\n        <div className=\"tile\">\n          {current_question.format.type.toLowerCase() === 'text' && (<TextField question={current_question} register={register} errors={errors} />)}\n          {current_question.format.type.toLowerCase() === 'number' && (<NumberField question={current_question} register={register} errors={errors} />)}\n          {current_question.format.type.toLowerCase() === 'select' && (<SelectField question={current_question} register={register} errors={errors} />)}\n          {current_question.format.type.toLowerCase() === 'radio' && (<RadioField question={current_question} register={register} errors={errors} />)}\n        </div>\n\n      </div>\n\n      <button\n        className={`button is-light ${submitIsLoading?'is-loading':''}`}\n        type=\"submit\"\n      >\n        <span>{t('Continuer')}</span>\n        <span className=\"icon is-small\">\n        <FontAwesomeIcon icon={isRTL(i18n.language)?faArrowLeft:faArrowRight} />\n        </span>\n      </button>\n\n    </form>\n  );\n}\n\nexport default withTranslation()(SurveyQuestionsTab);\n","import React from 'react';\nimport { withTranslation } from 'react-i18next'\n\n\nfunction SurveyResultsTab({t, reset}) {\n  \n  return (\n    <div>\n\n      <div className=\"box\">\n        <h2 className=\"title\">\n          {t('Résultats')}\n        </h2>\n      </div>\n\n      <button\n        className=\"button is-light\"\n        onClick={(e) => {\n          reset()\n          e.preventDefault()\n        }}\n      >\n        <span>{t('Reprendre le test')}</span>\n      </button>\n\n    </div>\n  );\n}\n\nexport default withTranslation()(SurveyResultsTab);\n","import React from 'react';\nimport { withTranslation } from 'react-i18next'\n\nimport api_questions from './../api/questions'\n\nimport ScreenLoadingIndicator from '../common/ScreenLoadingIndicator'\nimport ScreenError from '../common/ScreenError'\nimport SurveyInformationTab from './SurveyInformationTab'\nimport SurveyQuestionsTab from './SurveyQuestionsTab'\nimport SurveyResultsTab from './SurveyResultsTab'\n\n\nconst INFORMATION_TAB = 'INFORMATION_TAB'\nconst QUESTIONS_TAB = 'QUESTIONS_TAB'\nconst RESULTS_TAB = 'RESULTS_TAB'\n\n\nclass SurveyScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      loading_failed: false,\n      current_step: 0,\n      questions: [],\n      answers: [],\n      results: null\n    };\n  }\n\n  addAnswer = (question_id, key, value) => {\n    this.setState(state => {\n      let prevAnswersList = [...state.answers]\n      const already_existing_answer = prevAnswersList.filter((answer) => answer.key === key)?.[0]\n      if (already_existing_answer) {\n        return {\n          answers: prevAnswersList.map((answer) => answer.key !== key?answer:{question_id, key, value})\n        }\n      }\n      return {\n        answers: [...state.answers, ...[{question_id, key, value}]]\n      }\n    })\n  }\n\n  removeAnswer = (key) => {\n    this.setState(state => {\n      return {\n        answers: [...state.answers].filter(answer => answer.key !== key)\n      }\n    })\n  }\n  \n  stepForward = () => {\n    const {current_step, questions, answers} = this.state\n\n    // determine next step\n    let next_step = current_step + 1\n\n    for (next_step; next_step <= questions.length; next_step++) {\n      const next_question = questions[next_step - 1]\n      if (next_question.depends_on_question === null || next_question.depends_on_question === undefined) {\n        // next question does not depend on any prior answer, stop looking\n        break\n      }\n      else {\n        // next question does depend on a prior answer\n        // eslint-disable-next-line no-loop-func\n        const depended_upon_answer = answers.filter((answer) => answer.question_id === next_question.depends_on_question)[0]\n        if (depended_upon_answer.value === next_question.depends_on_question_value) {\n          break\n        }\n      }\n    }\n    \n    if (next_step <= questions.length) {\n      // if we did not reach the end of the survey, yet, simply step forward.\n      this.setState({current_step: next_step})\n      return Promise.resolve()\n    }\n    \n    if (next_step > questions.length) {\n      // if we have indeed reached the end of the survey, attempt submit, but only step forward on success.\n      return api_questions.post({answers: answers})\n        .then((response) => {\n          if (response.status === 201) {\n            this.setState({\n              current_step: next_step,\n              results: response.data\n            })\n            return Promise.resolve()\n          } else {\n            return Promise.reject()\n          }\n        })\n    }\n  }\n\n  stepBack = () => {\n    // step back to last saved answer/question\n    const {current_step, questions, answers} = this.state\n    let previous_step = current_step - 1\n      \n    if (answers.length) {\n      const last_answer = answers[answers.length - 1]\n      const last_question_index = questions.indexOf(questions.filter(question => question.key === last_answer.key)[0])\n      previous_step = last_question_index + 1\n      this.removeAnswer(last_answer.key)\n    }\n\n    this.setState({\n      current_step: previous_step\n    })\n  }\n\n  reset = () => {\n    this.setState({\n      current_step: 0,\n      answers: [],\n      results: null\n    })\n  }\n\n  loadQuestions() {\n    this.setState({\n      loading: true,\n      loading_failed: false\n    })\n    api_questions.get()\n      .then((response) => {\n        if (response.status === 200) {\n          this.setState({\n            questions: response.data\n          })\n        }\n        this.setState({\n          loading: false\n        })\n      })\n      .catch((error) => {\n        this.setState({\n          loading: false,\n          loading_failed: true\n        })\n      })\n  }\n\n  refresh() {\n    this.loadQuestions()\n  }\n\n  componentDidMount() {\n    this.loadQuestions()\n  }\n  \n  render() {\n    const {t} = this.props\n    const {current_step, questions, answers, loading, loading_failed} = this.state\n\n    // what tab to show?\n    let current_tab\n    if (current_step === 0) {\n      current_tab = INFORMATION_TAB\n    } else if (current_step > 0 && current_step <= questions.length) {\n      current_tab = QUESTIONS_TAB\n    } else if (current_step === questions.length + 1) {\n      current_tab = RESULTS_TAB\n    } else {\n      throw Error(`Invalid current_step value: ${current_step}`)\n    }\n\n    return (\n      <div className=\"container\">\n        \n        {loading && (\n          <ScreenLoadingIndicator />\n        )}\n\n        {!loading && loading_failed && (\n          <ScreenError\n            message={t('Une erreur est survenue.')}\n            buttonLabel={t('Rafraishir')}\n            handleButtonClick={(e) => {\n              e.preventDefault()\n              this.refresh()\n            }}\n          />\n        )}\n\n        {!loading && !loading_failed && (\n          <>\n            <div className=\"section\">\n              <nav className=\"level\">\n                <div className=\"level-item has-text-centered\">\n                </div>\n                <div className=\"level-item has-text-centered\">\n                  <span className={`tag ${current_tab === INFORMATION_TAB?'is-primary':'is-light'}`}>1</span> {t('Informations')}\n                </div>\n                <div className=\"level-item has-text-centered\">\n                  <span className={`tag ${current_tab === QUESTIONS_TAB?'is-primary':'is-light'}`}>2</span> {t('Questionnaire')}\n                </div>\n                <div className=\"level-item has-text-centered\">\n                  <span className={`tag ${current_tab === RESULTS_TAB?'is-primary':'is-light'}`}>3</span> {t('Résultats')}\n                </div>\n                <div className=\"level-item has-text-centered\">\n                </div>\n              </nav>\n              \n            </div>\n\n            <div className=\"section\">\n              {current_tab === INFORMATION_TAB && (\n                <SurveyInformationTab\n                  stepForward={this.stepForward}\n                />\n              )}\n              {current_tab === QUESTIONS_TAB && (\n                <SurveyQuestionsTab\n                  current_step={current_step}\n                  questions={questions}\n                  answers={answers}\n                  addAnswer={this.addAnswer}\n                  removeAnswer={this.removeAnswer}\n                  stepForward={this.stepForward}\n                  stepBack={this.stepBack}\n                />\n              )}\n              {current_tab === RESULTS_TAB && (\n                <SurveyResultsTab\n                  reset={this.reset}\n                />\n              )}\n            </div>\n          </>\n        )}\n\n      </div>\n    );\n  }\n}\n\nexport default withTranslation()(SurveyScreen);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowRight, faArrowLeft } from '@fortawesome/free-solid-svg-icons'\n\nimport { isRTL } from './../i18n'\n\n\nfunction HomeScreen({t, i18n}) {\n\n  return (\n    <div>\n\n      <section className=\"hero is-medium is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">\n              {t('À propos & Mentions légales')}\n            </h1>\n            <div class=\"columns\">\n              <div class=\"column is-four-fifths is-offset-one-fifth\">\n                <h3 class=\"subtitle is-4\">{t('À propos de site et la politique de confidentialité')}</h3>\n                <p></p>\n\n                <h3 class=\"subtitle is-4\">{t('Mentions légales')}</h3>\n                <p></p>\n              </div>\n\n            </div>\n\n\n          </div>\n        </div>\n      </section>\n\n    </div>\n  );\n}\n\nexport default withTranslation()(HomeScreen);\n","import App from './App'\nimport HomeScreen from './home/HomeScreen'\nimport SurveyScreen from './survey/SurveyScreen'\nimport LegalScreen from './home/LegalScreen'\n\n\nconst routes = [\n    {\n        component: App,\n        routes: [\n            {\n                path: '/',\n                exact: true,\n                component: HomeScreen\n            },\n            {\n                path: '/survey',\n                exact: true,\n                component: SurveyScreen\n            },\n            {\n                path: '/legal-notice',\n                exact: true,\n                component: LegalScreen\n            }\n        ]\n    }\n]\n\nexport default routes\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {renderRoutes} from 'react-router-config';\n\nimport routes from './app/routes';\nimport * as serviceWorker from './serviceWorker';\nimport './app/i18n/';\n\nimport 'bulma'\nimport './app/rtl.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      {renderRoutes(routes)}\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}