{"version":3,"sources":["app/i18n/index.js","app/App.js","app/home/HomeScreen.js","constants.js","app/api/_base.js","app/api/questions.js","app/common/ScreenLoadingIndicator.js","app/common/ScreenError.js","app/survey/SurveyInformationTab.js","app/utils/forms.js","app/survey/fields/TextField.js","app/survey/fields/NumberField.js","app/survey/fields/SelectField.js","app/survey/fields/RadioField.js","app/survey/SurveyQuestionsTab.js","app/survey/SurveyResultsSeverity0.js","app/survey/SurveyResultsSeverity1.js","app/survey/SurveyResultsSeverity3.js","app/survey/SurveyResultsTab.js","app/survey/SurveyScreen.js","app/home/LegalScreen.js","app/routes.js","serviceWorker.js","index.js"],"names":["i18next","use","initReactI18next","init","lng","nsSeparator","keySeparator","fallbackLng","returnNull","resources","ar","translation","en","isRTL","lang","withTranslation","t","i18n","route","useEffect","document","body","dir","language","useState","isActiveBurgerMenu","setIsActiveBurgerMenu","className","role","aria-label","to","onClick","href","aria-expanded","aria-hidden","e","changeLanguage","preventDefault","renderRoutes","routes","dangerouslySetInnerHTML","__html","icon","faArrowLeft","faArrowRight","api_base","axios","create","baseURL","constants","api_questions","get","post","answers","faSpinner","pulse","size","message","buttonLabel","handleButtonClick","faExclamationTriangle","stepForward","errorMessage","key","x","min","max","minLength","maxLength","question","register","errors","name","type","ref","required","value","undefined","format","min_length","max_length","step","indexOf","kind","choices","map","choice","style","display","margin","current_step","questions","addAnswer","stepBack","current_question","submitIsLoading","setSubmitIsLoading","defaultValues","default_value","useForm","handleSubmit","reset","onSubmit","values","id","empty_values","then","catch","length","last_answer_values","borderWidth","toLowerCase","results","severity","SurveyScreen","props","question_id","setState","state","prevAnswersList","filter","answer","removeAnswer","next_step","next_question","depends_on_question","depends_on_question_value","Promise","resolve","forEach","response","status","data","reject","previous_step","last_answer","loading","loading_failed","this","error","loadQuestions","current_tab","Error","ScreenLoadingIndicator","refresh","paddingBottom","React","Component","component","App","path","exact","HomeScreen","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.9a1812a6.chunk.js","sourcesContent":["import i18next from 'i18next'\nimport { initReactI18next } from 'react-i18next'\n\n// %Add any new languages here%\nimport ar from './ar/resource';\nimport en from './en/resource';\n\n\ni18next\n.use(initReactI18next) // passes i18n down to react-i18next\n.init({\n  lng: 'fr',\n\n  // allow keys to be phrases having `:`, `.`\n  nsSeparator: false,\n  keySeparator: false,\n\n  // do not load a fallback\n  fallbackLng: false,\n\n  // do not allow null as translation value (anything null will be considered as if not translated)\n  returnNull: false,\n\n  resources: {\n    // %Add any new languages here%\n    ar: {\n      translation: ar\n    },\n    en: {\n      translation: en\n    }\n  }\n});\n\n\nexport const isRTL = (lang) => {\n  if (lang === 'ar')\n    return true\n  return false\n}\n\nexport default i18next;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport { withTranslation } from 'react-i18next'\nimport { renderRoutes } from \"react-router-config\"\n\nimport { isRTL } from './i18n'\n\n\nfunction App({t, i18n, route}) {\n\n  useEffect(() => {\n    // ensure page text direction follows language changes\n    document.body.dir = isRTL(i18n.language)?'rtl':'ltr'\n  });\n\n  const [isActiveBurgerMenu, setIsActiveBurgerMenu] = useState(false);\n\n  return (\n    <div>\n      \n      <nav className=\"navbar is-primary\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <Link to=\"/\" className=\"navbar-item\">\n              <strong>{t('Accueil')}</strong>\n            </Link>\n\n            <a\n              onClick={() => {\n                setIsActiveBurgerMenu(!isActiveBurgerMenu);\n              }}\n              href=\"#\"\n              className={`navbar-burger burger ${isActiveBurgerMenu ? \"is-active\" : \"\"}`}\n              aria-label=\"menu\"\n              aria-expanded=\"false\"\n            >\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n            </a>\n          </div>\n\n          <div className={`navbar-menu ${isActiveBurgerMenu ? \"is-active\" : \"\"}`}>\n            <div className=\"navbar-end\">\n              <a\n                href=\"#\"\n                className={`navbar-item ${i18n.language === 'fr'?'is-active':''}`}\n                onClick={(e) => {\n                  i18n.changeLanguage('fr');\n                  e.preventDefault();\n                }}\n              >\n                Français\n              </a>\n              <a\n                href=\"#\"\n                className={`navbar-item ${i18n.language === 'ar'?'is-active':''}`}\n                onClick={(e) => {\n                  i18n.changeLanguage('ar');\n                  e.preventDefault();\n                }}\n              >\n                العربية\n              </a>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      {renderRoutes(route.routes)}\n\n      <footer className=\"footer\">\n        <div className=\"container\">\n          <div className=\"columns\">\n              <div className=\"column\">\n                  <aside className=\"menu\">\n                  <p className=\"menu-label\">\n                      {t('Contacts utiles')}\n                  </p>\n                      <ul className=\"menu-list\">\n                          <li><a href=\"tel:3030\">{t('Appelez le')}  30 30</a></li>\n                          <li><a href='http://www.sante.gov.dz/coronavirus/coronavirus-2019.html'>{t('Site du ministère de la Santé')}</a></li>\n                      </ul>\n                  </aside>\n              </div>\n                  <div className=\"column\">\n                  <aside className=\"menu\">\n                      <p className=\"menu-label\">\n                          {t('Navigation')}\n                      </p>\n                      <ul className=\"menu-list\">\n                          <li><a href='/'>{t('Accueil')}</a></li>\n                          <li><a href='/legal-notice'> {t('Mentions légales')}</a></li>\n                      </ul>\n                  </aside>\n              </div>\n              <div className=\"column is-three-quarters\">\n                  <p>\n                      {t('Algorithme d\\'orientation mis à jour sur les recommandations de la note n 9 du 18 mars 2020.')}\n                  </p>\n                  <p>\n                      {t('Ce site d’information n’est pas un dispositif médical, il ne délivre pas d’avis médical.')}\n                  </p>\n                  <p dangerouslySetInnerHTML={{__html: t('Projet solidaire d\\'urgence, créé par le groupe <b>DZ-Scientists VS Corona</b>.')}}></p>\n              </div>\n          </div>\n        </div>\n\n      </footer>\n \n\n    </div>\n  );\n\n}\n\nexport default withTranslation()(App);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowRight, faArrowLeft } from '@fortawesome/free-solid-svg-icons'\n\nimport { isRTL } from './../i18n'\n\n\nfunction HomeScreen({t, i18n}) {\n  \n  return (\n    <div>\n\n      <section className=\"hero is-medium is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">\n              {t('Vous pensez avoir été exposé au Coronavirus COVID-19 et avez des symptômes ?')}\n            </h1>\n            <h2 className=\"subtitle\">\n              {t('Faites le test pour répondre en citoyen éclairé selon vos symptômes.')}\n            </h2>\n            <Link to=\"/survey\" className=\"button is-primary\">\n              <span>{t('Démarrer le test')}</span>\n              <span className=\"icon is-small\">\n                <FontAwesomeIcon icon={isRTL(i18n.language)?faArrowLeft:faArrowRight} />\n              </span>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n    </div>\n  );\n}\n\nexport default withTranslation()(HomeScreen);\n","export default {\n  API_URL: 'https://mofeedz.herokuapp.com/api/public' // no trailing slash\n}\n","import axios from 'axios'\nimport constants from './../../constants'\n\n\nconst api_base = () => {\n  return axios.create({\n    baseURL: constants.API_URL,\n  })\n}\n\nexport default api_base\n","import api_base from './_base'\n\nconst api_questions = {\n  get: () => (\n    api_base().get('/questions/')\n  ),\n  post: (answers) => (\n    api_base().post('/questions/', answers)\n  )\n}\n\nexport default api_questions\n","import React from 'react';\nimport { withTranslation } from 'react-i18next'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction LoadingIndicator({t}) {\n  \n  return (\n    <section className=\"section has-text-centered\">\n      <span className=\"icon is-large\">\n        <FontAwesomeIcon icon={faSpinner} pulse={true} size={'3x'} />\n      </span>\n      <br/>\n      <br/>\n      {t('Chargement..')}\n    </section>\n  );\n}\n\nexport default withTranslation()(LoadingIndicator);\n","import React from 'react';\nimport { withTranslation } from 'react-i18next'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction ScreenError({t, message, buttonLabel, handleButtonClick}) {\n  \n  return (\n    <section className=\"section has-text-centered\">\n      <span className=\"icon is-large\">\n        <FontAwesomeIcon icon={faExclamationTriangle} size={'3x'} />\n      </span>\n      <br/>\n      <br/>\n      {message}\n      <br/>\n      <br/>\n      <button\n        className=\"button is-warning\"\n        onClick={handleButtonClick}\n      >\n        <span>{buttonLabel}</span>\n      </button>\n    </section>\n  );\n}\n\nexport default withTranslation()(ScreenError);\n","import React from 'react';\nimport { withTranslation } from 'react-i18next'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowRight, faArrowLeft } from '@fortawesome/free-solid-svg-icons'\n\nimport { isRTL } from './../i18n'\n\n\nfunction SurveyInformationTab({t, i18n, stepForward}) {\n  \n  return (\n    <div>\n\n      <div className=\"box\">\n        <h2 className=\"title\">{t('Préambule')}</h2>\n        <p>\n          {t('L’application est fournie à titre gratuit, en l’état, uniquement à des fins d’information pour contribuer à fluidifier la prise en charge des personnes par les services d’urgences pendant l’épidémie de Coronavirus COVID-19. L’exhaustivité, l’exactitude, le caractère à jour des informations et contenus mis à disposition dans cette application, ou leur adéquation à des finalités particulières, ne sont pas garantis.')}\n          <br/><br/>\n          {t('L’utilisateur reconnaît que l’application y compris le test et les autres informations qu’elle contient, ne constituent en aucun cas un avis, une recommandation, un examen, un diagnostic, une prescription, ou tout autre acte de nature médicale notamment établi ou réalisé par un médecin ou un pharmacien. L’utilisation de l’application et de son contenu ne remplace en aucun cas le conseil nécessaire donné par votre médecin ou votre pharmacien ou tout autre professionnel de santé compétent dans chaque cas particulier. Tout examen ou décision de l’utilisateur doit être réalisé ou prise de manière autonome sur la base de l’information scientifique et clinique pertinente, de la notice officielle du produit concerné le cas échéant et en cas de doute, en consultant un médecin compétent.')}\n          <br/><br/>\n          {t('Les informations mises à disposition dans le cadre de l’application servent uniquement d’informations de premier niveau. L’absence d’avertissement au sujet d’un risque ne signifie pas qu’il n’existe pas.')}\n        </p>\n      </div>\n\n      <button\n        className=\"button is-primary\"\n        onClick={(e) => {\n          stepForward({})\n          e.preventDefault()\n        }}\n      >\n        <span>{t('Démarrer le test')}</span>\n        <span className=\"icon is-small\">\n          <FontAwesomeIcon icon={isRTL(i18n.language)?faArrowLeft:faArrowRight} />\n        </span>\n      </button>\n\n    </div>\n  );\n}\n\nexport default withTranslation()(SurveyInformationTab);\n","export const errorMessage = function(key, t = x => x) {\n    switch (key) {\n        case 'required':\n            return () => t('Ce champ est réquis')\n        case 'min':\n            return (min) => `${t('Valeur minimale :')} ${min}`\n        case 'max':\n            return (max) => `${t('Valeur maximale :')} ${max}`\n        case 'minLength':\n            return (minLength) => `${t('La valeur doit comprendre au moins')} ${minLength} ${t('caractères')}`\n        case 'maxLength':\n            return (maxLength) => `${t('La valeur doit comprendre au plus')} ${maxLength} ${t('caractères')}`\n        default:\n            return t('Valeur non valide')\n    }\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { withTranslation } from 'react-i18next'\n\nimport { errorMessage } from './../../utils/forms'\n\n\nfunction TextField({t, i18n, question, register, errors}) {\n  \n  return (\n    <div>\n      <div className=\"field has-addons\">\n        <p className=\"control\">\n          <input\n            className={`input ${errors[question.key]?'is-danger':''}`}\n            name={question.key}\n            type=\"text\"\n            ref={register({\n              required: {value: true, message: errorMessage('required', t)()},\n              ...question.format.min_length!==undefined?{minLength: {value: question.format.minLength, message: errorMessage('minLength', t)(question.format.minLength) }}:{},\n              ...question.format.max_length!==undefined?{maxLength: {value: question.format.maxLength, message: errorMessage('maxLength', t)(question.format.maxLength) }}:{}\n            })}\n          />\n        </p>\n        {question.format[`suffix_${i18n.language}`] !== null && (\n          <p className=\"control\">\n            <a className=\"button is-static\">\n              {question.format[`suffix_${i18n.language}`]}\n            </a>\n          </p>\n        )}\n      </div>\n      {errors[question.key] && (<p className=\"help is-danger\">{errors[question.key].message}.</p>)}\n    </div>\n  );\n}\n\nexport default withTranslation()(TextField);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { withTranslation } from 'react-i18next'\n\nimport { errorMessage } from './../../utils/forms'\n\n\nfunction NumberField({t, i18n, question, register, errors}) {\n\n  return (\n    <div>\n      <div className=\"field has-addons\">\n        <p className=\"control\">\n          <input\n            className={`input ${errors[question.key]?'is-danger':''}`}\n            name={question.key}\n            type=\"number\"\n            step={['decimal', 'float'].indexOf(question.format.kind)>-1?\"0.01\":\"1\"}\n            ref={register({\n              required: {value: true, message: errorMessage('required', t)()},\n              ...question.format.min!==undefined?{min: {value: question.format.min, message: errorMessage('min', t)(question.format.min) }}:{},\n              ...question.format.max!==undefined?{max: {value: question.format.max, message: errorMessage('max', t)(question.format.max) }}:{}\n            })}\n          />\n        </p>\n        {question.format[`suffix_${i18n.language}`] !== null && (\n          <p className=\"control\">\n            <a className=\"button is-static\">\n              {question.format[`suffix_${i18n.language}`]}\n            </a>\n          </p>\n        )}\n      </div>\n      {errors[question.key] && (<p className=\"help is-danger\">{errors[question.key].message}.</p>)}\n    </div>\n  );\n}\n\nexport default withTranslation()(NumberField);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { withTranslation } from 'react-i18next'\n\nimport { errorMessage } from './../../utils/forms'\n\n\nfunction SelectField({t, i18n, question, register, errors}) {\n  \n  return (\n    <div>\n      <div className=\"field has-addons\">\n        <div className=\"control\">\n          <div className={`select ${errors[question.key]?'is-danger':''}`}>\n            <select\n              name={question.key}\n              ref={register({\n                required: {value: true, message: errorMessage('required', t)()}\n              })}\n            >\n              {question.format.choices.map((choice) => (\n                <option key={choice.value} value={choice.value}>{choice[`label_${i18n.language}`]}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n        {question.format[`suffix_${i18n.language}`] !== null && (\n          <p className=\"control\">\n            <a className=\"button is-static\">\n              {question.format[`suffix_${i18n.language}`]}\n            </a>\n          </p>\n        )}\n      </div>\n      {errors[question.key] && (<p className=\"help is-danger\">{errors[question.key].message}.</p>)}\n    </div>\n  );\n}\n\nexport default withTranslation()(SelectField);\n","import React from 'react';\nimport { withTranslation } from 'react-i18next'\n\nimport { errorMessage } from './../../utils/forms'\n\n\nfunction RadioField({t, i18n, question, register, errors}) {\n  \n  return (\n    <div className=\"control\">\n      {question.format.choices.map((choice) => (\n        <label className=\"radio\" key={choice.value} style={{display: 'block', margin: '0'}}>\n          <input\n            type=\"radio\"\n            name={question.key}\n            value={choice.value}\n            ref={register({\n              required: {value: true, message: errorMessage('required', t)()}\n            })}\n          />\n          {choice[`label_${i18n.language}`]}\n        </label>\n      ))}\n      {errors[question.key] && (<p className=\"help is-danger\">{errors[question.key].message}.</p>)}\n    </div>\n  );\n}\n\nexport default withTranslation()(RadioField);\n","import React, { useState } from 'react';\nimport { withTranslation } from 'react-i18next'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowRight, faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport { useForm } from \"react-hook-form\";\n\nimport { isRTL } from './../i18n'\n\nimport TextField from './fields/TextField'\nimport NumberField from './fields/NumberField'\nimport SelectField from './fields/SelectField'\nimport RadioField from './fields/RadioField'\n\n\nfunction SurveyQuestionsTab({t, i18n, current_step, questions, answers, addAnswer, stepForward, stepBack}) {\n  \n  const current_question = questions[current_step - 1]\n  const [submitIsLoading, setSubmitIsLoading] = useState(false);\n  \n  const defaultValues = {}\n  defaultValues[current_question.key] = current_question.default_value\n\n  const { handleSubmit, register, errors, reset } = useForm({defaultValues});\n  \n  const onSubmit = values => {\n    setSubmitIsLoading(true)\n\n    // store answer\n      addAnswer(current_question.id, current_question.key, values[current_question.key])\n\n    // reset form (needed in order for the form to be empty for use in the next question)\n    let empty_values = {}\n    empty_values[current_question.key] = \"\" // this exact line is important, so Radio fields can be reset too\n    reset(empty_values)\n\n    // step forward\n    stepForward()\n      .then(() => {\n        setSubmitIsLoading(false)\n      })\n      .catch(() => {\n        setSubmitIsLoading(false)\n      })\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      \n      <div className=\"box\">\n        \n        <button\n          type=\"button\"\n          className=\"button is-white\"\n          onClick={(e) => {\n            if (answers.length) {\n              let last_answer_values = {}\n              last_answer_values[answers[answers.length - 1].key] = answers[answers.length - 1].value\n              reset(last_answer_values)\n            }\n            stepBack()\n            e.preventDefault()\n          }}\n        >\n          <span className=\"icon is-small\">\n            <FontAwesomeIcon icon={isRTL(i18n.language)?faArrowRight:faArrowLeft} />\n          </span>\n          <span>{t('Question')} {current_step} {t('sur')} {questions.length}</span>\n        </button>\n        \n        <h2 className=\"title\">\n          {current_question[`text_${i18n.language}`]}\n        </h2>\n\n        <article className=\"message\">\n          <div className=\"message-body\" style={{borderWidth: 0}}>\n            {current_question.format.type.toLowerCase() === 'text' && (<TextField question={current_question} register={register} errors={errors} />)}\n            {current_question.format.type.toLowerCase() === 'number' && (<NumberField question={current_question} register={register} errors={errors} />)}\n            {current_question.format.type.toLowerCase() === 'select' && (<SelectField question={current_question} register={register} errors={errors} />)}\n            {current_question.format.type.toLowerCase() === 'radio' && (<RadioField question={current_question} register={register} errors={errors} />)}\n          </div>\n        </article>\n\n      </div>\n\n      <button\n        className={`button is-light ${submitIsLoading?'is-loading':''}`}\n        type=\"submit\"\n      >\n        <span>{t('Continuer')}</span>\n        <span className=\"icon is-small\">\n        <FontAwesomeIcon icon={isRTL(i18n.language)?faArrowLeft:faArrowRight} />\n        </span>\n      </button>\n\n    </form>\n  );\n}\n\nexport default withTranslation()(SurveyQuestionsTab);\n","import React from 'react';\nimport { withTranslation } from 'react-i18next'\n\n\nfunction SurveyResultsSeverity0({t}) {\n  \n  return (\n    <article className=\"message is-info\">\n      <div className=\"message-header\">\n        <p>{t('Votre état ne semble pas préoccupant.')}</p>\n      </div>\n      <div className=\"message-body content\">\n        <strong>{t('Restez chez vous.')}</strong>\n        <p>\n          {t('#RestezChezVous - limitez les contacts avec d\\'autres personnes. Le virus peut être propagé par des porteurs ne montrant pas de symptômes.')}\n        </p>\n      </div>\n    </article>\n  );\n}\n\nexport default withTranslation()(SurveyResultsSeverity0);\n","import React from 'react';\nimport { withTranslation } from 'react-i18next'\n\n\nfunction SurveyResultsSeverity1({t}) {\n  \n  return (\n    <article className=\"message is-info\">\n      <div className=\"message-header\">\n        <p>{t('Vos symptômes indiquent qu\\'un avis médical est nécessaire.')}</p>\n      </div>\n      <div className=\"message-body content\">\n\n        <strong>{t('Programmez une visite avec votre médecin traitant habituel.')}</strong>\n        <p>\n          {t('Ne vous déplacez pas au cabinet, appelez pour demander conseil avant votre venue !')}\n        </p>\n\n        <strong>{t('Surveillez attentivement votre état de santé.')}</strong>\n        <ul>\n          <li>{t('N’hésitez pas à contacter votre médecin en cas de doute.')}</li>\n          <li>{t('Mesurez votre température deux fois par jour.')}</li>\n          <li>{t('Refaites ce test en cas de nouveau symptôme pour réévaluer la situation.')}</li>\n          <li>{t('Restez chez vous en attendant que les symptômes disparaissent, mais restez attentif à toute aggravation.')}</li>\n        </ul>\n\n        <strong>{t('Restez chez vous.')}</strong>\n        <p>\n          {t('#RestezChezVous - limitez les contacts avec d\\'autres personnes. Le virus peut être propagé par des porteurs ne montrant pas de symptômes.')}\n        </p>\n      </div>\n    </article>\n  );\n}\n\nexport default withTranslation()(SurveyResultsSeverity1);\n","import React from 'react';\nimport { withTranslation } from 'react-i18next'\n\n\nfunction SurveyResultsSeverity3({t}) {\n  \n  return (\n    <article className=\"message is-warning\">\n      <div className=\"message-header\">\n        <p>{t('Vos symptômes nécessitent une prise en charge rapide.')}</p>\n      </div>\n      <div className=\"message-body content\">        \n        <h4>{t('Appelez le')} <a href=\"tel:3030\">30 30</a></h4>\n        <p>\n          {t('Fournir plus d\\'inforamtions ici..')}\n        </p>\n\n        <strong>{t('Restez chez vous.')}</strong>\n        <p>\n          {t('#RestezChezVous - limitez les contacts avec d\\'autres personnes. Le virus peut être propagé par des porteurs ne montrant pas de symptômes.')}\n        </p>\n      </div>\n    </article>\n  );\n}\n\nexport default withTranslation()(SurveyResultsSeverity3);\n","import React from 'react';\nimport { withTranslation } from 'react-i18next'\n\nimport SurveyResultsSeverity0 from './SurveyResultsSeverity0'\nimport SurveyResultsSeverity1 from './SurveyResultsSeverity1'\nimport SurveyResultsSeverity3 from './SurveyResultsSeverity3'\n\n\nfunction SurveyResultsTab({t, results, reset}) {\n  \n  return (\n    <div>\n\n      <div className=\"box\">\n        \n        <h2 className=\"title\">{t('Résultats')}</h2>\n        \n        <article className=\"message\">\n          <div className=\"message-body\">\n            {t('La recommandation affichée peut évoluer suivant les informations en provenance des autorités de santé et des chercheurs. Elle ne constitue pas un avis médical. En cas de doute, demandez conseil à votre médecin ou pharmacien.')}\n          </div>\n        </article>\n\n        {results?.severity === 0 && (<SurveyResultsSeverity0 />)}\n        {results?.severity === 1 && (<SurveyResultsSeverity1 />)}\n        {results?.severity === 3 && (<SurveyResultsSeverity3 />)}\n      </div>\n\n      <button\n        className=\"button is-light\"\n        onClick={(e) => {\n          reset()\n          e.preventDefault()\n        }}\n      >\n        <span>{t('Reprendre le test')}</span>\n      </button>\n\n    </div>\n  );\n}\n\nexport default withTranslation()(SurveyResultsTab);\n","import React from 'react';\nimport { withTranslation } from 'react-i18next'\n\nimport api_questions from './../api/questions'\n\nimport ScreenLoadingIndicator from '../common/ScreenLoadingIndicator'\nimport ScreenError from '../common/ScreenError'\nimport SurveyInformationTab from './SurveyInformationTab'\nimport SurveyQuestionsTab from './SurveyQuestionsTab'\nimport SurveyResultsTab from './SurveyResultsTab'\n\n\nconst INFORMATION_TAB = 'INFORMATION_TAB'\nconst QUESTIONS_TAB = 'QUESTIONS_TAB'\nconst RESULTS_TAB = 'RESULTS_TAB'\n\n\nclass SurveyScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      loading_failed: false,\n      current_step: 0,\n      questions: [],\n      answers: [],\n      results: null\n    };\n  }\n\n  addAnswer = (question_id, key, value) => {\n    this.setState(state => {\n      let prevAnswersList = [...state.answers]\n      const already_existing_answer = prevAnswersList.filter((answer) => answer.key === key)?.[0]\n      if (already_existing_answer) {\n        return {\n          answers: prevAnswersList.map((answer) => answer.key !== key?answer:{question_id, key, value})\n        }\n      }\n      return {\n        answers: [...state.answers, ...[{question_id, key, value}]]\n      }\n    })\n  }\n\n  removeAnswer = (key) => {\n    this.setState(state => {\n      return {\n        answers: [...state.answers].filter(answer => answer.key !== key)\n      }\n    })\n  }\n  \n  stepForward = () => {\n    const {current_step, questions, answers} = this.state\n\n    // determine next step\n    let next_step = current_step + 1\n\n    for (next_step; next_step <= questions.length; next_step++) {\n      const next_question = questions[next_step - 1]\n      if (next_question.depends_on_question === null || next_question.depends_on_question === undefined) {\n        // next question does not depend on any prior answer, stop looking\n        break\n      }\n      else {\n        // next question does depend on a prior answer\n        // eslint-disable-next-line no-loop-func\n        const depended_upon_answer = answers.filter((answer) => answer.question_id === next_question.depends_on_question)[0]\n        if (depended_upon_answer.value === next_question.depends_on_question_value) {\n          break\n        }\n      }\n    }\n    \n    if (next_step <= questions.length) {\n      // if we did not reach the end of the survey, yet, simply step forward.\n      this.setState({current_step: next_step})\n      return Promise.resolve()\n    }\n    \n    if (next_step > questions.length) {\n        const body = {}\n        answers.forEach(answer=>(body[answer.key] = answer.value))\n      // if we have indeed reached the end of the survey, attempt submit, but only step forward on success.\n      return api_questions.post(body)\n        .then((response) => {\n          if (response.status === 201) {\n            this.setState({\n              current_step: next_step,\n              results: response.data\n            })\n            return Promise.resolve()\n          } else {\n            return Promise.reject()\n          }\n        })\n    }\n  }\n\n  stepBack = () => {\n    // step back to last saved answer/question\n    const {current_step, questions, answers} = this.state\n    let previous_step = current_step - 1\n      \n    if (answers.length) {\n      const last_answer = answers[answers.length - 1]\n      const last_question_index = questions.indexOf(questions.filter(question => question.key === last_answer.key)[0])\n      previous_step = last_question_index + 1\n      this.removeAnswer(last_answer.key)\n    }\n\n    this.setState({\n      current_step: previous_step\n    })\n  }\n\n  reset = () => {\n    this.setState({\n      current_step: 0,\n      answers: [],\n      results: null\n    })\n  }\n\n  loadQuestions() {\n    this.setState({\n      loading: true,\n      loading_failed: false\n    })\n    api_questions.get()\n      .then((response) => {\n        if (response.status === 200) {\n          this.setState({\n            questions: response.data\n          })\n        }\n        this.setState({\n          loading: false\n        })\n      })\n      .catch((error) => {\n        this.setState({\n          loading: false,\n          loading_failed: true\n        })\n      })\n  }\n\n  refresh() {\n    this.loadQuestions()\n  }\n\n  componentDidMount() {\n    this.loadQuestions()\n  }\n  \n  render() {\n    const {t} = this.props\n    const {current_step, questions, answers, results, loading, loading_failed} = this.state\n\n    // what tab to show?\n    let current_tab\n    if (current_step === 0) {\n      current_tab = INFORMATION_TAB\n    } else if (current_step > 0 && current_step <= questions.length) {\n      current_tab = QUESTIONS_TAB\n    } else if (current_step === questions.length + 1) {\n      current_tab = RESULTS_TAB\n    } else {\n      throw Error(`Invalid current_step value: ${current_step}`)\n    }\n\n    return (\n      <div className=\"container\">\n        \n        {loading && (\n          <ScreenLoadingIndicator />\n        )}\n\n        {!loading && loading_failed && (\n          <ScreenError\n            message={t('Une erreur est survenue.')}\n            buttonLabel={t('Rafraishir')}\n            handleButtonClick={(e) => {\n              e.preventDefault()\n              this.refresh()\n            }}\n          />\n        )}\n\n        {!loading && !loading_failed && (\n          <>\n            <div className=\"section\" style={{paddingBottom: 0}}>\n\n              <ul className=\"steps has-content-centered\">\n                <li className={`steps-segment ${current_tab === INFORMATION_TAB?'is-active has-gaps':''}`}>\n                  <span className=\"steps-marker\">1</span>\n                  <div className=\"steps-content\">\n                    <p className=\"is-size-5\">{t('Informations')}</p>\n                  </div>\n                </li>\n                <li className={`steps-segment ${current_tab === QUESTIONS_TAB?'is-active has-gaps':''}`}>\n                  <span className=\"steps-marker\">2</span>\n                  <div className=\"steps-content\">\n                    <p className=\"is-size-5\">{t('Questionnaire')}</p>\n                  </div>\n                </li>\n                <li className={`steps-segment ${current_tab === RESULTS_TAB?'is-active has-gaps':''}`}>\n                  <span className=\"steps-marker\">3</span>\n                  <div className=\"steps-content\">\n                    <p className=\"is-size-5\">{t('Résultats')}</p>\n                  </div>\n                </li>\n              </ul>\n              \n            </div>\n\n            <div className=\"section\">\n              {current_tab === INFORMATION_TAB && (\n                <SurveyInformationTab\n                  stepForward={this.stepForward}\n                />\n              )}\n              {current_tab === QUESTIONS_TAB && (\n                <SurveyQuestionsTab\n                  current_step={current_step}\n                  questions={questions}\n                  answers={answers}\n                  addAnswer={this.addAnswer}\n                  removeAnswer={this.removeAnswer}\n                  stepForward={this.stepForward}\n                  stepBack={this.stepBack}\n                />\n              )}\n              {current_tab === RESULTS_TAB && (\n                <SurveyResultsTab\n                  reset={this.reset}\n                  results={results}\n                />\n              )}\n            </div>\n          </>\n        )}\n\n      </div>\n    );\n  }\n}\n\nexport default withTranslation()(SurveyScreen);\n","import React from 'react';\nimport { withTranslation } from 'react-i18next'\n\nfunction LegalScreen({t, i18n}) {\n\n  return (\n    <div>\n\n      <section className=\"hero is-medium is-bold\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">\n              {t('À propos & Mentions légales')}\n            </h1>\n            <div className=\"columns\">\n              <div className=\"column is-four-fifths is-offset-one-fifth\">\n                <h3 className=\"subtitle is-4\">{t('À propos de site et la politique de confidentialité')}</h3>\n                <p></p>\n\n                <h3 className=\"subtitle is-4\">{t('Mentions légales')}</h3>\n                <p></p>\n              </div>\n\n            </div>\n\n\n          </div>\n        </div>\n      </section>\n\n    </div>\n  );\n}\n\nexport default withTranslation()(LegalScreen);\n","import App from './App'\nimport HomeScreen from './home/HomeScreen'\nimport SurveyScreen from './survey/SurveyScreen'\nimport LegalScreen from './home/LegalScreen'\n\n\nconst routes = [\n    {\n        component: App,\n        routes: [\n            {\n                path: '/',\n                exact: true,\n                component: HomeScreen\n            },\n            {\n                path: '/survey',\n                exact: true,\n                component: SurveyScreen\n            },\n            {\n                path: '/legal-notice',\n                exact: true,\n                component: LegalScreen\n            }\n        ]\n    }\n]\n\nexport default routes\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {renderRoutes} from 'react-router-config';\n\nimport routes from './app/routes';\nimport * as serviceWorker from './serviceWorker';\nimport './app/i18n/';\n\nimport './app/styles.sass'\nimport './app/rtl.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      {renderRoutes(routes)}\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}